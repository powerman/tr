package main

// DO NOT EDIT: This file was generated by vugu. Please regenerate instead of editing or add additional code in a separate file.

import "fmt"
import "reflect"
import "github.com/vugu/vjson"
import "github.com/vugu/vugu"
import js "github.com/vugu/vugu/js"

import "github.com/powerman/tr/web/app/internal/ui"

type Root struct{}

func (c *Root) Build(vgin *vugu.BuildIn) (vgout *vugu.BuildOut) {

	vgout = &vugu.BuildOut{}

	var vgiterkey interface{}
	_ = vgiterkey
	var vgn *vugu.VGNode
	vgn = &vugu.VGNode{Type: vugu.VGNodeType(3), Namespace: "", Data: "div", Attr: []vugu.VGAttribute(nil)}
	vgout.Out = append(vgout.Out, vgn)	// root for output
	{
		vgparent := vgn
		_ = vgparent
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n    "}
		vgparent.AppendChild(vgn)
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(3), Namespace: "", Data: "nav", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "sticky-top navbar navbar-expand navbar-dark bg-primary bg-gradient"}}}
		vgparent.AppendChild(vgn)
		vgn.SetInnerHTML(vugu.HTML("\n        \x3Cdiv class=\"container\"\x3E\n            \x3Ca href=\"/\" class=\"navbar-brand\"\x3ETime Report\x3C/a\x3E\n        \x3C/div\x3E\n    "))
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n    "}
		vgparent.AppendChild(vgn)
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(3), Namespace: "", Data: "article", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "container py-4"}}}
		vgparent.AppendChild(vgn)
		{
			vgparent := vgn
			_ = vgparent
			vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n        "}
			vgparent.AppendChild(vgn)
			{
				vgcompKey := vugu.MakeCompKey(0xE3790904E3300CAC^vgin.CurrentPositionHash(), vgiterkey)
				// ask BuildEnv for prior instance of this specific component
				vgcomp, _ := vgin.BuildEnv.CachedComponent(vgcompKey).(*ui.PageReport)
				if vgcomp == nil {
					// create new one if needed
					vgcomp = new(ui.PageReport)
					vgin.BuildEnv.WireComponent(vgcomp)
				}
				vgin.BuildEnv.UseComponent(vgcompKey, vgcomp)	// ensure we can use this in the cache next time around
				vgout.Components = append(vgout.Components, vgcomp)
				vgn = &vugu.VGNode{Component: vgcomp}
				vgparent.AppendChild(vgn)
			}
			vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n    "}
			vgparent.AppendChild(vgn)
		}
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n    "}
		vgparent.AppendChild(vgn)
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(3), Namespace: "", Data: "footer", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "fixed-bottom bg-light"}}}
		vgparent.AppendChild(vgn)
		vgn.SetInnerHTML(vugu.HTML("\n        \x3Cdiv class=\"container\"\x3E\n            \x3Cdiv class=\"row\"\x3E\n                \x3Cdiv class=\"col text-muted\"\x3E\n                    Â© Powerman 2021\n                \x3C/div\x3E\n                \x3Cdiv class=\"col text-muted text-end\"\x3E\n                    This page is being rendered via \x3Ca href=\"https://webassembly.org/\"\x3EWebAssembly\x3C/a\x3E,\n                    written in \x3Ca href=\"https://golang.org/\"\x3EGo\x3C/a\x3E\n                    using \x3Ca href=\"https://vugu.org/\"\x3EVugu\x3C/a\x3E.\n                \x3C/div\x3E\n            \x3C/div\x3E\n        \x3C/div\x3E\n    "))
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n"}
		vgparent.AppendChild(vgn)
	}
	return vgout
}

// 'fix' unused imports
var _ fmt.Stringer
var _ reflect.Type
var _ vjson.RawMessage
var _ js.Value
